# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

set $mod Mod4

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:System San Fransisco Display 11

# Disable window title
new_window 1pixel

# Start the thunar daemon
exec --no-startup-id thunar --daemon

# Start the composite manager
exec --no-startup-id picom

# Start notifications service
exec --no-startup-id dunst

# Set input parameters for touchpad
exec --no-startup-id xinput set-prop "SYNA2393:00 06CB:7A13 Touchpad" "libinput Tapping Enabled" 1

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend.
exec --no-startup-id xscreensaver -nosplash &
exec --no-startup-id xss-lock --transfer-sleep-lock -- sh $HOME/utility-scripts/lock
exec --no-startup-id xautolock -time 5 -locker "sh $HOME/utility-scripts/lock"

# Start wallpaper runner
exec --no-startup-id $HOME/utility-scripts/auto-background-randomiser

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

# Start the IBus applet
exec --no-startup-id ibus-daemon --xim -d -r

# Start pyspotify listener
exec --no-startup-id python ~/.config/i3/py_spotify_listener.py

# Start rescuetime
exec --no-startup-id rescuetime

# Start f.lux (xflux)
exec --no-startup-id fluxgui

# Use pactl to adjust volume in PulseAudio.
bindsym XF86AudioRaiseVolume exec --no-startup-id sh $HOME/utility-scripts/increase-volume
bindsym XF86AudioLowerVolume exec --no-startup-id sh $HOME/utility-scripts/decrease-volume
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute @DEFAULT_SINK@ toggle

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# kill focused window
bindsym $mod+Shift+x exec --no-startup-id sh $HOME/utility-scripts/lock

# start a terminal
bindsym $mod+Return exec --no-startup-id termite

# kill focused window
bindsym $mod+Shift+q kill

# start rofi (a program launcher)
bindsym $mod+d exec rofi -show run

# strart clipmenu clipboard manager
exec --no-startup-id CM_LAUNCHER=rofi clipmenud

# change focus
bindsym $mod+j focus left
bindsym $mod+k focus down
bindsym $mod+l focus up
bindsym $mod+semicolon focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+j move left
bindsym $mod+Shift+k move down
bindsym $mod+Shift+l move up
bindsym $mod+Shift+semicolon move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# split in horizontal orientation
bindsym $mod+h split h

# split in vertical orientation
bindsym $mod+v split v

# enter fullscreen mode for the focused container
bindsym $mod+f fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# switch to workspace
bindsym $mod+1 workspace $ws1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace $ws3
bindsym $mod+4 workspace $ws4
bindsym $mod+5 workspace $ws5
bindsym $mod+6 workspace $ws6
bindsym $mod+7 workspace $ws7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace $ws1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace $ws3
bindsym $mod+Shift+4 move container to workspace $ws4
bindsym $mod+Shift+5 move container to workspace $ws5
bindsym $mod+Shift+6 move container to workspace $ws6
bindsym $mod+Shift+7 move container to workspace $ws7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# start programs in different workspaces
# exec --no-startup-id i3-msg 'workspace 9; exec /usr/bin/spotify'
# exec --no-startup-id i3-msg 'workspace 10; exec QT_SCALE_FACTOR=0.65 zoom'
exec --no-startup-id i3-msg 'workspace 1; exec /usr/bin/termite'
exec --no-startup-id i3-msg 'workspace 2; exec /usr/bin/brave'

# reload the configuration file
bindsym $mod+Shift+c reload

# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

# monitor config and workspace-monitor mapping
exec_always --no-startup-id xrandr --output eDP-1 --primary --mode 3840x2160 --pos 3840x0 --rotate normal --output DP-1 --off --output DP-2 --off --output DP-3 --mode 1920x1080 --pos 0x0 --scale 2x2 --rotate normal
# exec_always --no-startup-id xrandr --output eDP-1 --primary
# exec_always --no-startup-id xrandr --output DP-3 --scale 2x2
# exec_always --no-startup-id xrandr --output DP-3 --left-of eDP-1
workspace $ws1  output DP-3 
workspace $ws2  output DP-3 
workspace $ws3  output DP-3 
workspace $ws4  output DP-3 
workspace $ws5  output DP-3 
workspace $ws6  output eDP-1 
workspace $ws7  output eDP-1
workspace $ws8  output eDP-1
workspace $ws9  output eDP-1
workspace $ws10 output eDP-1  

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym semicolon resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape or $mod+r
        bindsym Return mode "default"
        bindsym Escape mode "default"
        bindsym $mod+r mode "default"

}

bindsym $mod+r mode "resize"

## Increase or decrease screen brightness
bindsym XF86MonBrightnessUp exec --no-startup-id xbacklight -inc 2 && polybar-msg hook backlight 1
bindsym XF86MonBrightnessDown exec --no-startup-id xbacklight -dec 2 && polybar-msg hook backlight 1

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#bar {
#        status_command i3status
#        status_command i3blocks
#}


# Setup gaps
# for_window [class="^.*"] border pixel 0
# gaps inner 5

exec --no-startup-id $HOME/.config/polybar/launch_polybar.sh

